<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on NoManPlay的博客</title><link>https://nomanplay.github.io/blog/post/</link><description>Recent content in Posts on NoManPlay的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 11 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://nomanplay.github.io/blog/post/index.xml" rel="self" type="application/rss+xml"/><item><title>R-Tree</title><link>https://nomanplay.github.io/blog/blog/p/r-tree/</link><pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate><guid>https://nomanplay.github.io/blog/blog/p/r-tree/</guid><description>&lt;h1 id="r-tree">R-Tree&lt;/h1>
&lt;h2 id="认识-r-tree">认识 R-Tree&lt;/h2>
&lt;p>B-Tree&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>的搜索本质是一维区间的划分过程，每次搜索节点就是一个子区间。&lt;/p>
&lt;p>R-Tree 是把 B-Tree 的思想拓展到多维空间，采用了 B-Tree 分割空间的思想，是一棵用来存储高维数据的平衡树&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">graph TB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">level3(level3)--&amp;gt;level2_1(level2_1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">level3(level3)--&amp;gt;level2_2(level2_2)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">level2_1(level2_1)--&amp;gt;level1_1(level1_1)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">level2_1(level2_1)--&amp;gt;level1_2(level1_2)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">level2_2(level2_2)--&amp;gt;level1_3(level1_3)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">level2_2(level2_2)--&amp;gt;level1_4(level1_3)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>对于 R-Tree 来说，叶子结点所在层级称为 &lt;em>level 1&lt;/em> ,根结点所在层级称为 &lt;em>level h&lt;/em> ,R-tree 满足以下性质：&lt;/p>
&lt;ol>
&lt;li>所有非根节点包含 &lt;em>m-M&lt;/em> 个记录索引（条目）。根结点的记录数可以小于 &lt;em>m&lt;/em>。通常 m= $\frac{M}{2}$&lt;/li>
&lt;li>每一个非叶子结点的分支数和该节点内的条目相同，一个条目对应一个分支，所有叶子节点都位于同一层，因此 R-Tree 为平衡树&lt;/li>
&lt;li>叶子结点的每一个条目表示一个点&lt;/li>
&lt;li>非叶子结点的每一个条目存放的数据结构为&lt;code>(I,child-pointer)&lt;/code>。&lt;code>child-pointer&lt;/code>是指向该条目对应孩子节点的指针，&lt;em>I&lt;/em>表示一个 n 维空间的最小矩形边界&lt;code>(minimum bounding rectangle 即 MBR)&lt;/code>，&lt;em>I&lt;/em>覆盖了该条目对应子树中所有的矩形或点&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://s2.loli.net/2022/01/24/yfkvQDZR5wtSWBC.png"
loading="lazy"
alt="mbr"
>&lt;/p>
&lt;p>两个黑点保存在一个页子节点的两个条目中，恰好框住这两个条目的矩形表示为 $I=(I_0,I_1)$。其中$I_0=(a,b)$，$I_1=(c,d)$，也就是说最小边界矩形是用各个维度的边表示，那么在三维空间中就是立方体，用 3 条边表示即可。&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a class="link" href="https://en.wikipedia.org/wiki/B-tree" target="_blank" rel="noopener"
>https://en.wikipedia.org/wiki/B-tree&lt;/a>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>平衡树是计算机科学中的一类数据结构，为改进的二叉查找树。一般的二叉查找树的查询复杂度取决于目标结点到树根的距离（即深度），因此当结点的深度普遍较大时，查询的均摊复杂度会上升。为了实现更高效的查询，产生了。在平衡树这里，平衡指所有叶子的深度趋于平衡，更广义的是指在树上所有可能查找的均摊复杂度偏低。&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>前端脚手架</title><link>https://nomanplay.github.io/blog/blog/p/%E5%89%8D%E7%AB%AF%E8%84%9A%E6%89%8B%E6%9E%B6/</link><pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate><guid>https://nomanplay.github.io/blog/blog/p/%E5%89%8D%E7%AB%AF%E8%84%9A%E6%89%8B%E6%9E%B6/</guid><description>&lt;h1 id="前端脚手架">前端脚手架&lt;/h1>
&lt;h2 id="目的">目的&lt;/h2>
&lt;p>通过脚手架实现用一行命令导入不同模板：&lt;/p>
&lt;ul>
&lt;li>PC 端 React&lt;/li>
&lt;li>移动端 Taro&lt;/li>
&lt;/ul>
&lt;p>实现的功能：&lt;/p>
&lt;ul>
&lt;li>一条简单的命令初始化项目&lt;/li>
&lt;li>提供友好的交互体验&lt;/li>
&lt;li>可选择安装不同模板&lt;/li>
&lt;li>自动安装项目依赖&lt;/li>
&lt;/ul>
&lt;h2 id="脚手架开发依赖">脚手架开发依赖&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.npmjs.com/package/chalk" target="_blank" rel="noopener"
>chalk&lt;/a>:修改控制台输出内容样式&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.npmjs.com/package/commander" target="_blank" rel="noopener"
>commander&lt;/a>:命令行工具&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.npmjs.com/package/download-git-repo" target="_blank" rel="noopener"
>download-git-repo&lt;/a>:用来下载远程模板&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.npmjs.com/package/inquirer" target="_blank" rel="noopener"
>inquirer&lt;/a>:交互式命令行工具&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.npmjs.com/package/ora" target="_blank" rel="noopener"
>ora&lt;/a>:显示 loading 动画&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.npmjs.com/package/log-symbols" target="_blank" rel="noopener"
>log-symbols&lt;/a>:显示出 √ 或 × 等的图标&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a class="link" href="https://www.npmjs.com/package/handlebars" target="_blank" rel="noopener"
>handlebars.js&lt;/a>:模板引擎&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>自动化脚本</title><link>https://nomanplay.github.io/blog/blog/p/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC/</link><pubDate>Mon, 11 Jul 2022 00:00:00 +0000</pubDate><guid>https://nomanplay.github.io/blog/blog/p/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC/</guid><description>&lt;h1 id="自动化脚本">自动化脚本&lt;/h1>
&lt;h2 id="crontab-语法">crontab 语法&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>位置&lt;/th>
&lt;th>含义&lt;/th>
&lt;th>范围&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>*&lt;/td>
&lt;td>分钟&lt;/td>
&lt;td>0-59&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>*&lt;/td>
&lt;td>小时&lt;/td>
&lt;td>0-23&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>*&lt;/td>
&lt;td>日期&lt;/td>
&lt;td>1-31&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>*&lt;/td>
&lt;td>月份&lt;/td>
&lt;td>1-12&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>*&lt;/td>
&lt;td>星期&lt;/td>
&lt;td>0-7(0 和 7 都是周日)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="编写-crontab">编写 crontab&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">crontab -e //编辑crontab
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;code>* * * * *&lt;/code> 自动化执行&lt;/li>
&lt;li>&lt;code> path/name.sh&lt;/code> 需要执行的脚本&lt;/li>
&lt;li>&lt;code>&amp;gt; path/name.txt 2&amp;gt;&amp;amp;1 &amp;amp; &lt;/code> 将脚本执行后的结果 输入到&lt;code>name.txt&lt;/code>文件上&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">crontab -l //查看crontab
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">* * * * * path/name.sh &amp;gt; path/name.txt 2&amp;gt;&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="p">&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将会在规定时间时自动执行对应脚本&lt;/p></description></item></channel></rss>